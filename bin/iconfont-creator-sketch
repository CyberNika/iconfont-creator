#!/usr/bin/env node

const program = require('commander');
const path = require('path');
const exists = require('fs').existsSync;
const chalk = require('chalk');
const CWD = process.cwd();

const utils = require('../lib');
const helpText = require('../config/help');

let filePath;

const initHelp = () => {
  console.log(chalk.yellow.bold('  Examples:'));
  console.log();
  console.log(chalk.yellow.bold(`    $ ${helpText.sketch}`));
  console.log();
};

program
  .usage('<sketch-file-path>')
  .option('-o, --output [output-path]', 'iconfont created path, default dist in current directory')
  .option('-t, --type [slices-or-artboards]', 'according to what for Sketch to export SVGs, slices(default) or artboards')
  .option('-c, --clear', 'clear output directory before create')
  .option('-m, --modules [components-divided-by-comma]', 'eg: -m vue,react-native,react. export Vue/React/React-Native Components, default all of them')
  .action(file => {
    filePath = file ? path.resolve(CWD, file) : null;
  })
  .on('--help', initHelp)
  .parse(process.argv);

if (!filePath) {
  program.help();
  process.exit(1);
} else if (!exists(filePath)) {
  console.log(chalk.red.bold('  the file does not exist'));
  console.log();
  process.exit(1);
} else if (program.type && ['slices', 'artboards'].indexOf(program.type) === -1) {
  console.log(chalk.red.bold('  the type(-t) param should be slices or artboards'));
  console.log();
  process.exit(1);
}

const params = {
  file: filePath,
  output: path.resolve(CWD, program.output || 'dist'),
  type: program.type || 'slices',
  clear: program.clear,
};

utils.exportFiles(params).then(() => {
  utils.exportIconfont({
    src: params.output,
    output: path.resolve(params.output, 'fonts'),
    modules:(program.modules || '').split(','),
  }).then(() => {
    console.log('ðŸ‘Œ  exports iconfont succeed');
  });
});
